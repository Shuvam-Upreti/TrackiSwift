@model TrackiSwift.Models.Order

<form method="post" asp-action="Delete">
    <input asp-for="OrderId" hidden />
    <div class="border p-3 mt-3">
        <div class="row pt-2">
            <h2 class="text-primary">Delete Order</h2>
            <hr />
        </div>
        <div id="alert"></div>
        <div class="mb-3">
            <div class="receiverName" style="display: flex;">
                <div class="col-2">
                    <label asp-for="ReceiverName"></label>
                </div>
                <div class="col-8">
                    <input asp-for="ReceiverName" class="form-control" />
                </div>
            </div>
            <span asp-validation-for="ReceiverName" class="text-danger" style="margin-left:13.5vw;"></span>
        </div>
        <div class="mb-3">
            <div class="deliveryAddress" style="display: flex;">
                <div class="col-2">
                    <label asp-for="DeliveryAddress"></label>
                </div>
                <div class="col-8">
                    <input asp-for="DeliveryAddress" class="form-control" />
                </div>
            </div>
            <span asp-validation-for="DeliveryAddress" class="text-danger" style="margin-left:13.5vw;"></span>
        </div>
        <div class="mb-3">
            <div class="weight" style="display: flex;">
                <div class="col-2">
                    <label asp-for="Weight"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Weight" class="form-control" />
                </div>
            </div>
            <span asp-validation-for="Weight" class="text-danger" style="margin-left:13.5vw;"></span>
        </div>
        <div class="mb-3">
            <div class="amount" style="display: flex;">
                <div class="col-2">
                    <label asp-for="Amount"></label>
                </div>
                <div class="col-8">
                    <select id="selectedAmount" asp-for="Amount" class="form-control">
                        <option value="100">Rs.100 (Inside RingRoad)</option>
                        <option value="130">Rs.130 (Outside RingRoad)</option>
                    </select>
                </div>
            </div>
            <span asp-validation-for="Amount" class="text-danger" style="margin-left:13.5vw;"></span>
        </div>
        <div class="mb-3">
            <div class="deliveryStatus" style="display: flex;">
                <div class="col-2">
                    <label asp-for="DeliveryStatus"></label>
                </div>
                <div class="col-8">
                    <input asp-for="DeliveryStatus" class="form-control" />
                </div>
            </div>
            <span asp-validation-for="DeliveryStatus" class="text-danger" style="margin-left:13.5vw;"></span>
        </div>
        <div class="mb-3">
            <div class="paymentStatus" style="display: flex;">
                <div class="col-2">
                    <label asp-for="PaymentStatus"></label>
                </div>
                <div class="col-8">
                    <input asp-for="PaymentStatus" class="form-control" />
                </div>
            </div>
            <span asp-validation-for="PaymentStatus" class="text-danger" style="margin-left:13.5vw;"></span>
        </div>
    </div>
    <button type="submit" class="btn btn-danger" style="width:150px">Delete</button>
    <a asp-area="Client" asp-controller="Order" asp-action="Index" class="btn btn-secondary" style="width:150px">Back to List</a>

    </div>

</form>

@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
@*<script>
     function ValidateInput() {
         //if(document.getElementId("alert".valueOf!="")
      const swalWithBootstrapButtons = Swal.mixin({
        customClass: {
         confirmButton: 'btn btn-success',
         cancelButton: 'btn btn-danger'
          },
          buttonsStyling: false
           })

       swalWithBootstrapButtons.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'No, cancel!',
        reverseButtons: true
        }).then((result) => {
        if (result.isConfirmed) {
            swalWithBootstrapButtons.fire(
                'Deleted!',
                'Your file has been deleted.',
                'success'
            )
        } else if (
            /* Read more about handling dismissals below */
            result.dismiss === Swal.DismissReason.cancel
        ) {
            swalWithBootstrapButtons.fire(
                'Cancelled',
                'Your imaginary file is safe :)',
                'error'
            )
        }
            return false;
    });
    return true;
}
    </script>
}*@